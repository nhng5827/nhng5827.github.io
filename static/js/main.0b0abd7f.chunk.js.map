{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js","assets/prof.png","assets/portfolioSS.png","assets/MDSS.png"],"names":["Landing","style","width","margin","className","col","alt","src","profilepic","href","rel","target","Component","About","Contact","Project","props","state","activeTab","this","shadow","minWidth","color","height","background","mdssCard","border","colored","portfolioCard","onChange","tabId","setState","ripple","toggleCategories","Resume","Main","exact","path","component","LandingPage","AboutMe","Projects","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0b0abd7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Grid, Cell} from 'react-mdl';\nimport profilepic from '../assets/prof.png'\nclass Landing extends Component {\n  render(){\n    return(\n      <div style={{width: '100%', margin:'auto'}}>\n      <Grid className=\"landing-grid\">\n      <Cell col={12}>\n      <img className=\"profile-pic\" alt=\"prof\" src={profilepic} />\n      <div className=\"banner-text\">\n        <h1>NHI NGUYEN</h1>\n        <hr>\n        </hr>\n        <h2>Software Engineer</h2>\n        <p>Javascript | jQuery | Python | HTML/CSS | Highcharts | JSON | Bootstrap | Bash Scripting | Photoshop</p>\n        <span>React | Ext JS | MySQL | OpenLayers | Leaflet | HTML5 | SASS</span>\n        <div className=\"social-links\">\n          {/*LinkedIn*/}\n          <a href=\"https://www.linkedin.com/in/nhi-q-nguyen/\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <i className=\"fab fa-linkedin\"></i>\n          </a>\n          {/*GitHub*/}\n          <a href=\"https://github.com/nhng5827\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <i className=\"fab fa-github\"></i>\n          </a>\n        </div>\n      </div>\n      </Cell>\n  </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render(){\n    return(\n      <div><h1>About Page</h1></div>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render(){\n    return(\n      <div><h1>Contact Page</h1></div>\n    )\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport {Tabs, Tab, Grid, Cell, Card, CardTitle, CardText,CardActions, Button, CardMenu, IconButton} from 'react-mdl'\nimport portfolioCard from '../assets/portfolioSS.png'\nimport mdssCard from '../assets/MDSS.png'\nclass Project extends Component {\n  constructor(props){\n    super(props);\n    this.state = {activeTab: 0}\n  }\ntoggleCategories(){\n  if(this.state.activeTab === 0){\n    return(\n      /*Work Tab*/\n      <div className=\"projects-grid\">\n      <Card shadow={5} style={{minWidth:'450', margin:'auto'}}>\n        <CardTitle style={{color:'#000', height:'350px', background:\"url(\" + mdssCard +\") center / cover\"}}>DIA MDSS Display</CardTitle>\n        <CardText>\n          Single-page web/mobile-web app for Denver Airport Decision Support System. My role was building out the front-end portion. Tech Used: Javascript, HTML/CSS, Highcharts, Bootstrap\n        </CardText>\n         <CardActions border>\n          <Button colored>Demo</Button>\n        </CardActions>\n        {/*<CardMenu style={{color: '#fff'}}>\n          <IconButton name=\"share\"/>\n        </CardMenu> */}\n      </Card>\n    </div>\n\n    )\n  }else if(this.state.activeTab === 1){\n    return(\n      /*React Tab*/\n      <div className=\"projects-grid\">\n      <Card shadow={5} style={{minWidth:'450', margin:'auto'}}>\n        <CardTitle style={{color:'#fff', height:'350px', background:\"url(\" + portfolioCard +\") center / cover\"}}>React Portfolio</CardTitle>\n        <CardText>\n          First React Project involving creating a React based portfolio site. Tech Used: React, React-MDL, React Router DOM\n        </CardText>\n         <CardActions border>\n          <Button colored>GitHub</Button>\n        </CardActions>\n        {/*<CardMenu style={{color: '#fff'}}>\n          <IconButton name=\"share\"/>\n        </CardMenu> */}\n      </Card>\n    </div>\n    )\n  }else if(this.state.activeTab === 2){\n    return(\n      <div><h1>School</h1></div>\n    )\n  }\n}\n\n  render(){\n    return(\n      <div className=\"category-tabs\">\n        <Tabs activeTab ={this.state.activeTab} onChange ={(tabId) => this.setState({activeTab: tabId})} ripple>\n          <Tab>Work</Tab>\n          <Tab>React</Tab>\n          <Tab>School</Tab>\n        </Tabs>\n          <Grid>\n            <Cell col={12}>\n              {this.toggleCategories()}\n            </Cell>\n          </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Project;\n","import React, { Component } from 'react';\n\nclass Resume extends Component {\n  render(){\n    return(\n      <div><h1>Resume Page</h1></div>\n    )\n  }\n}\n\nexport default Resume;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutme';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nconst Main = () => (\n  <Switch>\n  <Route exact path=\"/\" component={LandingPage} />\n  <Route path=\"/aboutme\" component={AboutMe} />\n  <Route path=\"/contact\" component={Contact} />\n  <Route path=\"/projects\" component={Projects} />\n  <Route path=\"/resume\" component={Resume} />\n  </Switch>\n)\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport {Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n    <Layout>\n        <Header className=\"header-color\" title=\"NHI NGUYEN\" scroll>\n            <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"NHI NGUYEN\">\n            <Navigation>\n            <Link to=\"/resume\">Resume</Link>\n            <Link to=\"/aboutme\">About Me</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n// <React.StrictMode>\n// </React.StrictMode>,\nReactDOM.render(\n\n\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/prof.6253f0a3.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolioSS.a6d50426.png\";","module.exports = __webpack_public_path__ + \"static/media/MDSS.70db86a1.png\";"],"sourceRoot":""}